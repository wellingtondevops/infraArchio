Implantar o controlador de entrada NGINX com o Helm

1- helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
   helm repo update

2- helm install nginx-ingress ingress-nginx/ingress-nginx   

3- kubectl get deployment nginx-ingress-ingress-nginx-controller
    kubectl get service nginx-ingress-ingress-nginx-controller


4- Aguarde alguns instantes enquanto o balanceador de carga L4 do Google Cloud é implantado e, em seguida, confirme se o nginx-ingress-nginx-ingressserviço foi implantado e se você tem um endereço IP externo associado ao serviço:    
    kubectl get service nginx-ingress-ingress-nginx-controller

5- Exporte o EXTERNAL-IPdo controlador de entrada NGINX em uma variável para ser usada posteriormente:
    
    export NGINX_INGRESS_IP=$(kubectl get service nginx-ingress-ingress-nginx-controller -ojson | jq -r '.status.loadBalancer.ingress[].ip')

6- echo $NGINX_INGRESS_IP  

pausa.....continua...

7 - Aplicar yaml ingress-controlller






8 -  instalar cert-manager -kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.5.3/cert-manager.yaml


saida geral


Duvidas --->

https://www.youtube.com/watch?v=xWOEdO4tyHQ&t=2049s

NAME: nginx-ingress
LAST DEPLOYED: Thu Sep 23 10:56:39 2021
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
The ingress-nginx controller has been installed.
It may take a few minutes for the LoadBalancer IP to be available.
You can watch the status by running 'kubectl --namespace default get services -o wide -w nginx-ingress-ingress-nginx-controller'

An example Ingress that makes use of the controller:

  apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    annotations:
      kubernetes.io/ingress.class: nginx
    name: example
    namespace: foo
  spec:
    rules:
      - host: www.example.com
        http:
          paths:
            - backend:
                serviceName: exampleService
                servicePort: 80
              path: /
    # This section is only required if TLS is to be enabled for the Ingress
    tls:
        - hosts:
            - www.example.com
          secretName: example-tls

If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:

  apiVersion: v1
  kind: Secret
  metadata:
    name: example-tls
    namespace: foo
  data:
    tls.crt: <base64 encoded cert>
    tls.key: <base64 encoded key>
  type: kubernetes.io/tls


  Gerar opaque
  echo -n 'SENHA URL O QUE VC QUER MASCARAR' | base64


  34.135.213.219

  curl -m1 34.135.213.219:110

  se der problema use essa documentacao
  https://kubernetes.github.io/ingress-nginx/deploy/#gce-gke